########################################################
#                                                      #
#             -3: "Prefer not to answer"               #
#                                                      #
########################################################
# Analysis on the items with the "Prefer not to answer" option

# Subsetting and recoding as dummy variable: 1 PNA, 0 otherwise
not <- c(names(which(colSums(alldata==-3)==0)))
alldata1<-alldata[,!colnames(alldata) %in% not, with =F]
alldata1 <- ifelse(alldata1==-3,1,0)

# GWAS specifically for the variable with the highest number of participants who chose PNA: 
highest_PNA <- cbind(alldata$f.userId, alldata1[,"f.1100.0.0"])
colnames(highest_PNA) <- c("s","phen")
write.table(highest_PNA, file='highest_PNA.tsv', quote=FALSE, sep='\t', col.names = NA)
highest_PNA <- read.table(file='highest_PNA.tsv')

# Heatmap Tetrachoric correlation
alldata1_tetra_corr <- tetrachoric(alldata1)$rho
plot(hclust(dist(alldata1_tetra_corr)), cex=0.62, xlab=NA, main = "Cluster Dendrogram on tetrachoric correlation matrix")

# Labels
rownames(alldata1_tetra_corr) <- colnames(alldata1_tetra_corr) <- substr(lab_vec[match(colnames(alldata1), paste0("f.",lab_vec$FieldID,".0.0")),]$Field,0, 25)

# Heatmap tetrachoric correlation
interactive_matrix(get_lower_tri(alldata1_tetra_corr), scale= 'Tetrachoric correlation', main = 'Prefer Not to Answer tetrachoric correlation')

########################################################
#              FACTOR ANALYSIS - 1 FA                  #
########################################################

# CFA 1 fa *before* pruning (109 items)
model1 <- '
g =~  f.20116.0.0 + f.21000.0.0 + f.670.0.0 + f.6139.0.0 + f.699.0.0 + f.6142.0.0 + f.6138.0.0 + f.864.0.0 + f.884.0.0 + f.904.0.0 +
f.1031.0.0 + f.6160.0.0 + f.1050.0.0 + f.1060.0.0 + f.1070.0.0 + f.1080.0.0 + f.1090.0.0 + f.1100.0.0 + f.1110.0.0 + f.1160.0.0 +
f.1170.0.0 + f.1180.0.0 + f.1190.0.0 + f.1200.0.0 + f.1210.0.0 + f.1220.0.0 + f.1239.0.0 + f.1289.0.0 + f.1299.0.0 + f.1309.0.0 +
f.1319.0.0 + f.1329.0.0 + f.1339.0.0 + f.1349.0.0 + f.1359.0.0 + f.1369.0.0 + f.1379.0.0 + f.1389.0.0 + f.6144.0.0 + f.1418.0.0 +
f.1428.0.0 + f.1438.0.0 + f.1458.0.0 + f.1478.0.0 + f.1488.0.0 + f.1498.0.0 + f.1518.0.0 + f.1528.0.0 + f.1538.0.0 + f.1548.0.0 +
f.1558.0.0 + f.1647.0.0 + f.1677.0.0 + f.1687.0.0 + f.1697.0.0 + f.1707.0.0 + f.1717.0.0 + f.1727.0.0 + f.1737.0.0 + f.1747.0.0 +
f.1757.0.0 + f.1767.0.0 + f.1920.0.0 + f.1930.0.0 + f.1940.0.0 + f.1950.0.0 + f.1960.0.0 + f.1970.0.0 + f.1980.0.0 + f.1990.0.0 +
f.2000.0.0 + f.2010.0.0 + f.2020.0.0 + f.2030.0.0 + f.2040.0.0 + f.2050.0.0 + f.2060.0.0 + f.2070.0.0 + f.2080.0.0 + f.2090.0.0 +
f.2100.0.0 + f.2110.0.0 + f.6149.0.0 + f.2178.0.0 + f.2188.0.0 + f.6146.0.0 + f.2207.0.0 + f.2227.0.0 + f.2267.0.0 + f.2277.0.0 +
f.2296.0.0 + f.2306.0.0 + f.2316.0.0 + f.6145.0.0 + f.6159.0.0 + f.2335.0.0 + f.2345.0.0 + f.6150.0.0 + f.6152.0.0 + f.2443.0.0 +
f.2453.0.0 + f.2463.0.0 + f.2473.0.0 + f.2492.0.0 + f.6154.0.0 + f.6155.0.0 + f.2247.0.0 + f.6179.0.0 + f.2237.0.0 
'
fit1 <- cfa(model1, 
            data = alldata1, sample.nobs = nrow(alldata1),
            estimator="WLSMV", std.lv = TRUE,
            ordered = colnames(alldata1))
fit1 <- readRDS(file = "fit1.rds")

# Factor scores from 1 factor CFA *before* pruning (109 items) 
factscores1 <- lavPredict(fit1)
metric3 <- cbind(alldata$f.userId, factscores1)
colnames(metric3) <- c("s","phen")
write.table(metric3, file='metric3.tsv', quote=FALSE, sep='\t', col.names = NA)
metric3 <- read.table(file='metric3.tsv')

# Matrix rg out
metric3_rg_PNA_clean <- out_matrix_rg(name_file="metric3_rg_PNA.csv")
metric3_rg_PNA_clean_strong <- rbind(head(metric3_rg_PNA_clean,5),tail(metric3_rg_PNA_clean,5))

########################################################
#                    BEFORE PRUNING                    #
########################################################

# EFA Alldata - extract off the general latent factor showing the substructure 
fa1 <- fa(r= alldata1_tetra_corr,nfactors=1,fm="ols", n.obs=nrow(alldata1),rotate="biquartimin", residuals = TRUE) # Oblique

# Heatmap residuals 1 factor fa():
interactive_matrix(fa1$residual, scale= 'Residuals intensity', main = 'Heatmap residuals 1 factor FA - PNA')
interactive_matrix(alldata1, scale= 'Residuals intensity', main = 'Heatmap alldata')
interactive_matrix(alldata1_tetra_corr, scale= 'Residuals intensity', main = 'Heatmap tetrachoric')

# Dendrogram cluster residuals' distance - cut at .5
rownames(fa1$residual) <- colnames(fa1$residual) <- substr(lab_vec[match(colnames(fa1$residual), paste0("f.",lab_vec$FieldID,".0.0")),]$Field,0, 25)
plot(hclust(dist(fa1$residual)), cex=0.62, xlab=NA, main = "Cluster Dendrogram on (1-residuals) from FA with 1 factor")
abline(h=.5, col= "red", lty = 4)

plot(cut(as.dendrogram(hclust(dist(1-fa1$residual))), h=.5)$upper, main="Upper tree of cut at h=0.5")
plot(cut(as.dendrogram(hclust(dist(1-fa1$residual))), h=.5)$lower[[2]], main="Second branch of lower tree with cut at h=.5")
labels(cut(as.dendrogram(hclust(dist(1-fa1$residual))), h=.5)$lower[[14]])

# Colnames and labels
column_names <- c("branch_31","f.21000.0.0","branch_3","f.6142.0.0","f.6138.0.0",
                  "branch_4", "f.1031.0.0", "f.6160.0.0", "branch_9", "branch_6",
                  "f.1100.0.0", "f.1110.0.0", "branch_33", "f.1180.0.0", "f.1210.0.0",
                  "branch_34", "branch_35", "f.6144.0.0", "f.1538.0.0", "branch_30",
                  "branch_32", "branch_29", "branch_14", "branch_13", "branch_16",
                  "f.2110.0.0", "f.6149.0.0", "branch_27", "f.2188.0.0", "f.6146.0.0",
                  "branch_22", "f.2277.0.0", "f.2296.0.0", "f.6145.0.0", "f.6159.0.0",
                  "branch_23", "branch_21")

labels <- c("Smoking status","Ethnic background","Type of accommodation and lenght at current address","Current employment status","Qualifications",
            "Physical activity", "Frequency of friend/family visits", "Leisure/social activities", "Time spent outdoors or watching TV", "Time spent using PC or driving",
            "Drive faster than motorway speed limit", "Length of mobile phone use", "Sleep quality and duration", "Morning/evening person", "Snoring",
            "Fruit and vegetable intake", "Diet, food and alcohol intake", "Never eat eggs, dairy, wheat, sugar", "Major dietary changes in the last 5 years", "Person-specific information: adopted, handedness, hair color",
            "Childhood sunburn occasions and facial ageing", "Skin color and ease of skin tanning", "Depression/neuroticism feelings", "Frequency od depressed mood/unenthusiasm/tenseness", "Seen a psychiatrist or GP for nerves, anxiety, tension or depression",
            "Able to confide", "Mouth/teeth dental problems", "Overall health status", "Long-standing illness, disability or infirmity", "Attendance/disability/mobility allowance",
            "Wears glasses and eye problems", "Frequency of solarium/sunlamp use", "Falls in the last year", "Illness, injury, bereavement, stress in last 2 years", "Pain type(s) experienced in last month",
            "Hearth and lungs problems", "Vitamin and dietary supplements")

########################################################
#                     PRUNING 1                        #
########################################################
# Summing for each individual the # of PNAs of all the items inside each branch with 2+ items

PNA_pruned1 <- readRDS('PNA_pruned1.rds', refhook = NULL) 
colnames(PNA_pruned1) <- labels

# Simple count of Prefer not to answer (PNA) per individual *before* pruning (109 items) 
# Same *before* and *after* pruning *1* (37 items)
metric1 <- cbind(alldata$f.userId, rowSums(alldata1))
colnames(metric1) <- c("s","phen")
write.table(metric1, file='metric1.tsv', quote=FALSE, sep='\t', col.names = NA)
metric1 <- read.table(file='metric1.tsv')

# Matrix rg out
metric1_rg_PNA_clean <- out_matrix_rg(name_file="metric1_rg_PNA.csv")
metric1_rg_PNA_clean_strong <- rbind(head(metric1_rg_PNA_clean,5),tail(metric1_rg_PNA_clean,5))

########################################################
#                    PRUNING 2                         #
########################################################
# Split in 4 bins: 0, 1, 2: [2,n-1], 3: n PNAs for 4+ items

for(i in c("branch_33", "branch_34", "branch_35", "branch_30", "branch_14", "branch_13", "branch_27")){
  PNA_pruned1[,i] <- ifelse(PNA_pruned1[,i] == max(as.numeric(names(table(PNA_pruned1[,i])))), 'n', PNA_pruned1[,i])}
PNA_pruned2 <- apply(as.data.frame(PNA_pruned1), 2, function(x) {car::recode(x, "'0'= 0; '1'= 1; 'n'= 3; else= 2")})

# Order the factors for CFA
PNA_pruned2  <- as.data.frame(apply(PNA_pruned2, 2, as.factor))
PNA_pruned2 <- plyr::catcolwise( function(v) ordered(v, levels = c(0, 1, 2, 3)))(PNA_pruned2)

# Convert to numeric for EFA
PNA_pruned2  <- as.data.frame(apply(PNA_pruned2, 2, as.numeric))

# Labels
colnames(PNA_pruned2) <- labels

# Splitting in training set and testing set (80:20) for EFA and CFA (before mod ind) respectively
set.seed(42) # Meaning of life: 42

PNA_pruned2_train_ind <- sample(seq_len(nrow(PNA_pruned2)), size = floor(0.80 * nrow(PNA_pruned2)))
PNA_pruned2_train <- PNA_pruned2[PNA_pruned2_train_ind, ] # EFA
PNA_pruned2_test <- PNA_pruned2[-PNA_pruned2_train_ind, ] # CFA

# CFA 1 factor
PNA_pruned2_cfa_1fac_model <- '
g	=~  branch_31 + f.21000.0.0 + branch_3 + f.6142.0.0 + f.6138.0.0 + 
branch_4 +  f.1031.0.0 +  f.6160.0.0 +  branch_9 +  branch_6 + 
f.1100.0.0 +  f.1110.0.0 +  branch_33 +  f.1180.0.0 +  f.1210.0.0 + 
branch_34 +  branch_35 +  f.6144.0.0 +  f.1538.0.0 +  branch_30 + 
branch_32 +  branch_29 +  branch_14 +  branch_13 +  branch_16 + 
f.2110.0.0 +  f.6149.0.0 +  branch_27 +  f.2188.0.0 +  f.6146.0.0 + 
branch_22 +  f.2277.0.0 +  f.2296.0.0 +  f.6145.0.0 +  f.6159.0.0 + 
branch_23 +  branch_21
'
PNA_pruned2_cfa_1fac_fit <- cfa(PNA_pruned2_cfa_1fac_model, 
            data = PNA_pruned2, sample.nobs = nrow(PNA_pruned2),
            estimator="WLSMV", std.lv = TRUE,
            ordered = colnames(PNA_pruned2))

# Using factor.scores from 1 factor FA *after* pruning *2* (37 items) 
PNA_pruned2_cfa_1fac_factscores <- lavPredict(PNA_pruned2_cfa_1fac_fit)
PNA_pruned2_cfa_1fac_metric <- cbind(alldata$f.userId, PNA_pruned2_cfa_1fac_factscores)
colnames(PNA_pruned2_cfa_1fac_metric) <- c("s","phen")
PNA_pruned2_cfa_1fac_metric <- read.table(file='PNA_pruned2_cfa_1fac_metric.tsv')

# Matrix rg out
PNA_pruned2_cfa_1fac_metric_clean <- out_matrix_rg(name_file="rg_PNA_pruned2_cfa_1fac_metric.csv")
PNA_pruned2_cfa_1fac_metric_clean_strong <- rbind(head(PNA_pruned2_cfa_1fac_metric_clean,5),tail(PNA_pruned2_cfa_1fac_metric_clean,5))

# Correlation (coded as numeric as for EFA), Eigenvalues, Heatmap
PNA_pruned2_corr <- mixedCor(PNA_pruned2)$rho

ev <- eigen(PNA_pruned2_corr)
plot(ev$values[1:10], type = "l")
abline(h=1, col = "red", lty = 2)
sum((ev$value/sum(ev$value)*100)[1:5]) # Account for ~67% of total variance

colnames(PNA_pruned2_corr) <- rownames(PNA_pruned2_corr) <- labels
interactive_matrix(PNA_pruned2_corr, main = "Heatmap correlation matrix")

# Comparison PNA_pruned2_corr and PNA_pruned1_corr
#PNA_pruned1 <- as.numeric(PNA_pruned1)
PNA_pruned1_corr <- mixedCor(PNA_pruned1)$rho
colnames(PNA_pruned1_corr) <- rownames(PNA_pruned1_corr) <- labels
interactive_matrix(PNA_pruned1_corr, main = "Heatmap 'old' correlation matrix")

new <- matrix(1, nrow = ncol(PNA_pruned2_corr), ncol = ncol(PNA_pruned2_corr))
new[upper.tri(new)] <- PNA_pruned1_corr[upper.tri(PNA_pruned1_corr)]
new[lower.tri(new)] <- PNA_pruned2_corr[lower.tri(PNA_pruned2_corr)]
rownames(new) <- colnames(new) <- labels
plot_ly(x=colnames(new), y=colnames(new), z = new, type = "heatmap",colors=c("white","red")) %>%
  layout(title = 'Heatmap tetrachoric correlation - Comparison', xaxis = list(autotick = F, tickmode = "array", tickvals = c(" "),title = 'Sum within branch'),  
         yaxis = list(autotick = F, tickmode = "array", tickvals = c(" "), title = "Pruning - 4 bins"))

# EFA >1 factors, (5 factors)
PNA_pruned2_efa_5fac <- fa(r= PNA_pruned2, nfactors=5, fm="ols", n.obs=nrow(PNA_pruned2),rotate="biquartimin", residuals = TRUE, cor = "mixed") 
interactive_matrix(PNA_pruned2_efa_5fac$residual, main = "Residuals EFA 5 factor - mixed Correlation")
print(PNA_pruned2_efa_5fac$loadings, cutoff = 0.2, digits=5)

# Print diagram
colnames(PNA_pruned2_efa_5fac$loadings)<-c("G","Social Status","Overall Health","Ethnicity","Depression")
fa.diagram(PNA_pruned2_efa_5fac$loadings, g =TRUE, simple = F,cex=1,main = "Bifactor Model 'Prefer Not to Answer'",rsize =.5, e.size = .025)

# CFA
# 1 - *before* modification indeces - Training set (80%)
# 2 - *after* modification indeces - Testing set (20%)
# 3 - Final model CFA: alldata (100%)

# CFA *AFTER* modification index on all dataset (100%) FINAL
cfa_5fac_pruned2_mod <- '
g	=~  branch_31 + f.21000.0.0 + branch_3 + f.6142.0.0 + f.6138.0.0 + 
branch_4 +  f.1031.0.0 +  f.6160.0.0 +  branch_9 +  branch_6 + 
f.1100.0.0 +  f.1110.0.0 +  branch_33 +  f.1180.0.0 +  f.1210.0.0 + 
branch_34 +  branch_35 +  f.6144.0.0 +  f.1538.0.0 +  branch_30 + 
branch_32 +  branch_29 +  branch_14 +  branch_13 +  branch_16 + 
f.2110.0.0 +  f.6149.0.0 +  branch_27 +  f.2188.0.0 +  f.6146.0.0 + 
branch_22 +  f.2277.0.0 +  f.2296.0.0 +  f.6145.0.0 +  f.6159.0.0 + 
branch_23 +  branch_21

# Social status: Type of accommodation and lenght at current address, Current employment status, Qualifications, Frequency of friend/family visits 
f1	=~  branch_3 + f.6142.0.0 + f.6138.0.0 + f.1031.0.0
# Overall health
f2	=~  f.6149.0.0 +  branch_27 +  f.2188.0.0 +  f.6146.0.0 + branch_22 + 
f.2296.0.0 + f.6159.0.0 + branch_23 +  branch_21
# Ethnicity
f3	=~  f.21000.0.0 + branch_30 + branch_29 
# Depression/Neuroticism
f4	=~  branch_14 +  branch_13 +  branch_16 + f.2110.0.0 
# General factor orthogonal to the group factors
g  ~~  0*f1
g  ~~  0*f2
g  ~~  0*f3
g  ~~  0*f4

# Modification indeces
branch_6 ~~  f.1100.0.0
f.1100.0.0 ~~  f.1110.0.0
'
fit_cfa_5fac_pruned2_mod <- cfa(cfa_5fac_pruned2_mod, 
                            data = PNA_pruned2, sample.nobs = nrow(PNA_pruned2),
                            estimator="WLSMV", std.lv = TRUE,
                            ordered = colnames(PNA_pruned2))

# Modification indices: 
mod_ind <- modificationindices(fit_cfa_5fac_pruned2)
mod_ind_ord <- mod_ind[order(mod_ind$mi, decreasing=TRUE), ]

# The ML estimator converges normally, CFI (User model versus more restricted baseline model, higher is better ie. >.8), 
# AIC, BIC (smaller is better), RMSEA (how closely the model reproduces data patterns, closer to 0.05 is better): the model has “close fit” 
summary(fit_cfa_5fac_pruned2,fit.measures=TRUE)
fitMeasures(fit_cfa_5fac_pruned2)

# Estimates are regression coefficient
parameterEstimates(fit_cfa_5fac_pruned2, standardized=TRUE)

# Factor score from "g" in 5 CFA all dataset 
PNA_pruned2_cfa_5fac_metric <- cbind(alldata$f.userId, PNA_pruned2_cfa_5fac_factscores[,'g'])
colnames(PNA_pruned2_cfa_5fac_metric) <- c("s","phen")
write.table(PNA_pruned2_cfa_5fac_metric, file='new_PNA_pruned2_cfa_5fac_metric.tsv', quote=FALSE, sep='\t', col.names = NA)
new_PNA_pruned2_cfa_5fac_metric <- read.table(file='new_PNA_pruned2_cfa_5fac_metric.tsv')

# Matrix rg out
PNA_pruned2_cfa_5fac_metric_clean <- out_matrix_rg(name_file="rg_gwas_PNA_pruned2_cfa_5fac.csv")
PNA_pruned2_cfa_5fac_metric_clean_strong <- rbind(head(PNA_pruned2_cfa_5fac_metric_clean[order(PNA_pruned2_cfa_5fac_metric_clean$rg),],5), 
                                                  tail(PNA_pruned2_cfa_5fac_metric_clean[order(PNA_pruned2_cfa_5fac_metric_clean$rg),],5))

plot(density(PNA_pruned2_cfa_5fac_metric_clean$z))
plot(PNA_pruned2_cfa_5fac_metric_clean$z)

gwas_PNA_pruned2_cfa_5fac <- read.table(file = 'gwas_PNA_pruned2_cfa_5fac_metric.tsv.bgz', sep = '\t', header = TRUE)
gwas_PNA_pruned2_cfa_5fac[gwas_PNA_pruned2_cfa_5fac$pval<5e-08,] 

# Manhattan plot
manhattan_plot('gwas_new_PNA_pruned2_cfa_5fac_metric.tsv.bgz')
qq(gwas_exp_1$P)

#Plot phenotypic distribution:
PNA_pruned2_cfa_5fac_metric <- PNA_pruned2_cfa_5fac_metric[,-1]
plot(density(PNA_pruned2_cfa_5fac_metric[PNA_pruned2_cfa_5fac_metric>0]))

##### GWAS 0,1+ PNA
PNA_1_0 <- cbind(as.data.frame(alldata$f.userId),as.data.frame(PNA_pruned2_cfa_5fac_metric[,2]))
colnames(PNA_1_0) <- c('s','phen')
PNA_1_0 <- cbind(as.data.frame(alldata$f.userId),test)
colnames(PNA_1_0) <- c('s','phen')
write.table(PNA_1_0, file='PNA_1_0.tsv', quote=FALSE, sep='\t', col.names = NA)
PNA_1_0 <- read.table(file='PNA_1_0.tsv', header = T)

##### GWAS 1+ PNA
metric_1plus_PNA <- cbind(as.data.frame(alldata$f.userId),as.data.frame(PNA_pruned2_cfa_5fac_metric[,2]))
colnames(metric_1plus_PNA) <- c('s','phen')
metric_1plus_PNA <- metric_1plus_PNA[metric_1plus_PNA$phen>0,]
write.table(metric_1plus_PNA, file='PNA_1plus.tsv', quote=FALSE, sep='\t', col.names = NA)
PNA_1plus <- read.table(file='PNA_1plus.tsv', header = T)
 
